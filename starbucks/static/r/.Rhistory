x
x
x
x
x
x=default.stringsAsFactors()
x
[|]
input(name)
install.packages("splitstackshape")
install.packages("tidyverse")
install.packages("reshape2")
install.packages("devtools")
install.packages("plotly")
install.packages("crosstalk")
install.packages("DT")
install.packages("fivethirtyeight")
install.packages("tidyverse")
install.packages("splitstackshape")
install.packages("tidyverse")
install.packages("reshape2")
install.packages("devtools")
install.packages("plotly")
install.packages("crosstalk")
install.packages("DT")
install.packages("fivethirtyeight")
a <- 3
b <- 3.1415
c <- "This is a string"
d <- "Yet another string"
e <- TRUE
f <- FALSE
g <- T
h <- F
print(disney_characters)
disney_characters <- c("mickey", "minnie", "donald", "goofy")
presidents <- c("washington", "adams", "jefferson")
numbers_vector <- c(1, 3, 5, 7, 9, 11)
print(disney_characters)
print(presidents)
print(numbers_vector)
presidents[1]
combined_vector <- c(disney_characters, presidents)
combined_vector
for (x in combined_vector){
print(x)
}
numeric_vector <- 1:length(combined_vector)
squared_vector <- numeric_vector**2
print(combined_vector)
numeric_vector <- 1:length(combined_vector)
numeric_vector <- 1:length(combined_vector)
combined_vector <- c(disney_characters, presidents)
combined_vector
numeric_vector <- 1:length(combined_vector)
numeric_vector <- length(combined_vector)
numeric_vector <- 1:length(combined_vector)
print(combined_vector)
print(numeric_vector)
print(squared_vector)
random_list["states"]
random_list <- list("movies"=c("Star Wars", "Titanic", "Avatar"),
"states"=c("California", "Oklahoma", "Texas", "Virginia"),
"coins"=c("penny", "dime", "nickel", "quarter"),
"first_presidents"=presidents,
"nums"=c(1,2,3,4,5),
"bools"=c(T,F,T,T,T,F)
)
random_list <- list("movies"=c("Star Wars", "Titanic", "Avatar"),
"states"=c("California", "Oklahoma", "Texas", "Virginia"),
"coins"=c("penny", "dime", "nickel", "quarter"),
"first_presidents"=presidents,
"nums"=c(1,2,3,4,5),
"bools"=c(T,F,T,T,T,F)
)
random_list["states"]
random_list$coins
typeof(random_list)
random_list$coins
a <- 3
b <- 3.1415
attendance(stuent)
student <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
attendance(stuent)
attendance(student)
att(student)
student <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
att <- function(class) {
print(Sys.Date())
for (student in class) {
print(student)
}
}
att(student)
combination_code <- function(class) {
for (student in class) {
combination <- sample(33,3)
print(student)
print(combination)
}
}
combination_code(student)
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34,66,3)
print(student)
print(combination)
}
}
students <- c("Abraham", "Beatrice", "Cory", "Dinah", "Eric", "Felicia")
att <- function(class) {
print(Sys.Date())
for (student in class) {
print(student)
}
}
att(students)
combination_code <- function(class) {
for (student in class) {
combination <- sample(33,3)
print(student)
print(combination)
}
}
combination_code(students)
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34,66,3)
print(student)
print(combination)
}
}
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)
}
}
combination_code(students)
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)
}
}
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)
else
print(student)
print(combination)
}
}
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)
else
print(student)
print(combination)
}
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)
else {
print(student)
print(combination)
}
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)
else
print(student)
print(combination)
}}
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)
else
print(student)
print(combination)
}}
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)
else {
print(student)
print(combination)
}
for (student in students) {
second_letter <- substr(student,2,2)
if (second_letter == "e") {
combination <- sample(34:66,3)
print(student)
print(combination)}
else {
print(student)
print(combination)
}
}
library(dplyr)
# Simple vectors
# Months of the year
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
# Average rainfall/precipitation in NYC during each month
precipitation <- c(3.9, 2.9, 4.1, 3.9, 4.5, 3.5, 4.5, 4.1, 4.0, 3.4, 3.8, 3.6)
print(precipitation)
print(months)
print(precipitation)
names(precipitation) <- months
print(precipitation)
print(names(precipitation))
mar_precipitation <- precipitation["Mar"]
print(mar_precipitation)
summary(precipitation)
precipitation_summary <- summary(precipitation)
print(precipitation)
# Assign names to a vector
# Assign months to precipitation as names
names(precipitation) <- months
# Display names of precipitation
print(names(precipitation))
# Display names of precipitation
print(names(precipitation))
print(mar_precipitation)
precipitation_summary <- summary(precipitation)
precipitation_summary["Mean"]
# Access features of a summary
precipitation_summary["Min."]
# Use double brackets to access only the value
precipitation_summary[["Max."]]
# Standard deviation
# Display the standard deviation
sd(precipitation)
# Round SD to two digits
stdev <- sd(precipitation)
round(stdev, 2)
knitr::opts_chunk$set(echo = TRUE)
sample_csv <- read_csv("data.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
sample_csv <- read_csv("data.csv")
head(sample_csv)
View(sample_csv)
knitr::opts_chunk$set(echo = TRUE)
ufo <- read_csv)"ufo.csv
ufo <- read_csv("ufo.csv")
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ufo <- read_csv("ufo.csv")
View(ufo)
View(ufo)
ufo_count <- nrow(datetime)
ufo_count <- nrow("datetime")
ufo_count <- nrow("datetime")
ufo_count <- nrow("date posted")
ufo_count %>% count()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ufo <- read_csv("ufo.csv")
ufo_count %>% count()
ufo_count %>% count()
ufo %>& head()
summary(head(ufo))
summary(head(ufo))
ufo %>% head()
summary(head(ufo))
ufo %>% head()
count(ufo())
summary(head(ufo))
ufo %>% head()
(count(ufo())
summary(head(ufo))
ufo %>% head()
ufo %>% count()
summary(head(ufo))
ufo %>% head()
ufo %>% count()
length(ufo$state %>% unique())
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(tidyverse)
cart_rental.tb<-
tibble(
name = c(
'George',
'Martha',
'John',
'Abigail'
),
current_age = c(
12, 11, 10, 7
),
years_left = (25 - current_age)
)
)
cart_rental.tb<-
tibble(
name = c(
'George',
'Martha',
'John',
'Abigail'
),
current_age = c(
12, 11, 10, 7
),
years_left = (25 - current_age)
)
cart_rental.tb<-
tibble(
name = c(
'George',
'Martha',
'John',
'Abigail'
),
current_age = c(
12, 11, 10, 7
),
years_left = (25 - current_age)
)
cart_rental.tb
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
toFahrenheit <- function(temperature) {
fahrenheit <- temperature * 1.8 + 32
return(fahrenheit)
}
celsius <- c(0, -2, 0, 5.2, 5.4)
celsius <- c(0, -2, 0, 5.2, 5.4)
toFahrenheit <- function(temperature) {
fahrenheit <- temperature * 1.8 + 32
return(fahrenheit)
}
celsius <- c(0, -2, 0, 5.2, 5.4)
fahrenheit <- numeric()
for (i in 1:length(celsius)) {
temperature_fahrenheit <- toFahrenheit(celsius[i])
fahrenheit[i] <- temperature_fahrenheit
}
fahrenheit2 <- sapply(celsius, toFahrenheit)
fahrenheit2
fahrenheit3 <- lapply(celsius, toFahrenheit)
fahrenheit3
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
students <-read_csv("students.csv")
students %>% head()
schools %>% head()
students <-read_csv("../resources/students.csv")
schools <- read_csv("../resources/schools.csv")
students %>% head()
schools %>% head()
data2 = left_join(students, schools, by=c("school_name"))
data2 %>% head()
school_count <- students$school_name %>%
unique() %>%
length()
school_count
student_count <-  students %>% nrow()
student_count
mean_reading_score <- summarize(students, mean(reading_score))
mean_math_score <- summarize(students, mean(math_score))
mean_reading_score <- summarize(students, mean(reading_score))
mean_math_score <- summarize(students, mean(math_score))
mean_reading_score <- summarize(students, mean(reading_score))
mean_math_score <- summarize(students, mean(math_score))
mean_reading_score
mean_math_score
percentage_passing_reading <- students %>%
filter(reading_score > 70) %>%
nrow() * 100 / student_count %>%
round(2)
percentage_passing_reading
percentage_passing_math <-  students %>%
filter(math_score > 70) %>%
nrow() * 100 / student_count %>%
round(2)
percentage_passing_math
overall_passing_rate <- (percentage_passing_math + percentage_passing_reading) / 2
overall_passing_rate
students %>%
group_by(school_name) %>%
summarize(avg.reading=mean(reading_score), avg.math=mean(math_score))
students %>%
group_by(school_name, grade) %>%
summarize(avg.reading=mean(reading_score), avg.math=mean(math_score))
total_budget <- schools %>%
summarize(sum(budget))
total_budget <- schools %>%
summarize(sum(budget))
total_budget <- schools %>%
summarize(sum(budget))
total_budget
paste("School count: ", school_count)
paste("Student count: ", student_count)
paste("Total budget: ", total_budget)
paste("Average reading score: ", mean_reading_score)
paste("Average math score: ", mean_math_score)
paste("% passing reading: ", percentage_passing_reading)
paste("% passing math: ", percentage_passing_math)
paste("Overall passing rate: ", overall_passing_rate)
total_budget <- schools %>%
summarize(sum(budget))
type(total_budget)
total_budget <- schools %>%
summarize(sum(budget))
typeof(total_budget)
total_budget <- schools %>%
summarize(sum(budget))
typeof(total_budget)
total_budget
# YOUR CODE HERE
total_budget <- total_budget %>% sapply(as.numeric)
mean_math_score <- mean_math_score %>%  sapply(as.numeric)
mean_reading_score <- mean_reading_score %>% sapply(as.numeric)
# YOUR CODE HERE
total_budget <- total_budget %>% sapply(as.numeric)
mean_math_score <- mean_math_score %>%  sapply(as.numeric)
mean_reading_score <- mean_reading_score %>% sapply(as.numeric)
paste("School count: ", school_count)
paste("Student count: ", student_count)
paste("Total budget: ", total_budget)
paste("Average reading score: ", mean_reading_score)
paste("Average math score: ", mean_math_score)
paste("% passing reading: ", percentage_passing_reading)
paste("% passing math: ", percentage_passing_math)
paste("Overall passing rate: ", overall_passing_rate)
View(schools)
View(students)
View(data2)
# YOUR CODE HERE
total_budget <- total_budget %>% sapply(as.numeric)
mean_math_score <- mean_math_score %>%  sapply(as.numeric)
mean_reading_score <- mean_reading_score %>% sapply(as.numeric)
# YOUR CODE HERE
total_budget <- total_budget %>% sapply(as.numeric)
mean_math_score <- mean_math_score %>%  sapply(as.numeric)
mean_reading_score <- mean_reading_score %>% sapply(as.numeric)
# YOUR CODE HERE
district_summary <- tribble(
~Total.Schools, ~Total.Students, ~Total.Budget, ~Avg.Math, ~Avg.Reading, ~Percent.Passing.Math, ~Percent.Passing.Reading, ~Overall.Passing,
school_count, student_count, total_budget[[1]], mean_math_score[[1]], mean_reading_score[[1]], percentage_passing_reading, percentage_passing_math[[1]], overall_passing_rate
)
# YOUR CODE HERE
district_summary <- tribble(
~Total.Schools, ~Total.Students, ~Total.Budget, ~Avg.Math, ~Avg.Reading, ~Percent.Passing.Math, ~Percent.Passing.Reading, ~Overall.Passing,
school_count, student_count, total_budget[[1]], mean_math_score[[1]], mean_reading_score[[1]], percentage_passing_reading, percentage_passing_math[[1]], overall_passing_rate
)
district_summary
# YOUR CODE HERE
school_summary.tb <- data2 %>%
group_by(type, school_name) %>%
summarise(Avg.Reading.Score=mean(reading_score),
Avg.Math.Score=mean(math_score),
Total.Students=n(),
Budget = mean(budget),
Per.Student.Budget = mean(budget) / n()
)
school_summary.tb
starbucks <- read_csv("starbucks_us_locations.csv")
starbucks %>% head()
starbucks <- read_csv("Resources/starbucks_us_locations.csv")
starbucks.df <- read_csv("../Resources/starbucks_us_locations.csv")
starbucks.df <- read_csv("../Resources/starbucks_us_locations.csv")
starbucks.df <- read_csv("Resources/starbucks_us_locations.csv")
starbucks.df
library(tidyverse)
starbucks.df <- read_csv("starbucks_us_locations.csv")
starbucks.df <- read_csv("starbucks_us_locations.csv")
library(tidyverse)
starbucks.df <- read_csv("starbucks_us_locations.csv")
library(tidyverse)
starbucks.df <- read_csv("Resources/starbucks_us_locations.csv")
starbucks.df <- read_csv("stores.csv")
starbucks.df <- read_csv("stores.csv")
library(tidyverse)
ufo <- read_csv("ufo.csv")
library(tidyverse)
starbucks.df <- read_csv("stores.csv")
library(tidyverse)
starbucks.df <- read_csv("us_stores.csv")
setwd("~/Desktop/StarbucksLocations/static/r")
starbucks.df <- read_csv("us_stores.csv")
library(tidyverse)
starbucks.df <- read_csv("us_stores.csv")
starbucks.df <- read_csv("../data/us_stores.csv")
View(starbucks.df)
